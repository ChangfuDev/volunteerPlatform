<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nsu.greywolf.mapper.OrdersMapper">
  <resultMap id="BaseResultMap" type="cn.edu.nsu.greywolf.pojo.Orders">
    <id column="orderId" jdbcType="INTEGER" property="orderId" />
    <result column="logisticsId" jdbcType="INTEGER" property="logisticsId" />
    <result column="volunteerId" jdbcType="INTEGER" property="volunteerId" />
    <result column="orderNumber" jdbcType="VARCHAR" property="orderNumber" />
    <result column="orderTime" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="orderMerchant" jdbcType="VARCHAR" property="orderMerchant" />
    <result column="totalPrice" jdbcType="VARCHAR" property="totalPrice" />
    <result column="orderDiscount" jdbcType="VARCHAR" property="orderDiscount" />
    <result column="orderPostage" jdbcType="VARCHAR" property="orderPostage" />
    <result column="actualPayment" jdbcType="VARCHAR" property="actualPayment" />
    <result column="orderStatus" jdbcType="VARCHAR" property="orderStatus" />
    <result column="receiptInformation" jdbcType="VARCHAR" property="receiptInformation" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    orderId, logisticsId, volunteerId, orderNumber, orderTime, orderMerchant, totalPrice, 
    orderDiscount, orderPostage, actualPayment, orderStatus, receiptInformation
  </sql>
  <select id="selectByExample" parameterType="cn.edu.nsu.greywolf.pojo.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where orderId = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where orderId = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.nsu.greywolf.pojo.OrdersExample">
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.nsu.greywolf.pojo.Orders">
    insert into orders (orderId, logisticsId, volunteerId, 
      orderNumber, orderTime, orderMerchant, 
      totalPrice, orderDiscount, orderPostage, 
      actualPayment, orderStatus, receiptInformation
      )
    values (#{orderId,jdbcType=INTEGER}, #{logisticsId,jdbcType=INTEGER}, #{volunteerId,jdbcType=INTEGER}, 
      #{orderNumber,jdbcType=VARCHAR}, #{orderTime,jdbcType=TIMESTAMP}, #{orderMerchant,jdbcType=VARCHAR}, 
      #{totalPrice,jdbcType=VARCHAR}, #{orderDiscount,jdbcType=VARCHAR}, #{orderPostage,jdbcType=VARCHAR}, 
      #{actualPayment,jdbcType=VARCHAR}, #{orderStatus,jdbcType=VARCHAR}, #{receiptInformation,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.nsu.greywolf.pojo.Orders">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        orderId,
      </if>
      <if test="logisticsId != null">
        logisticsId,
      </if>
      <if test="volunteerId != null">
        volunteerId,
      </if>
      <if test="orderNumber != null">
        orderNumber,
      </if>
      <if test="orderTime != null">
        orderTime,
      </if>
      <if test="orderMerchant != null">
        orderMerchant,
      </if>
      <if test="totalPrice != null">
        totalPrice,
      </if>
      <if test="orderDiscount != null">
        orderDiscount,
      </if>
      <if test="orderPostage != null">
        orderPostage,
      </if>
      <if test="actualPayment != null">
        actualPayment,
      </if>
      <if test="orderStatus != null">
        orderStatus,
      </if>
      <if test="receiptInformation != null">
        receiptInformation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="logisticsId != null">
        #{logisticsId,jdbcType=INTEGER},
      </if>
      <if test="volunteerId != null">
        #{volunteerId,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderMerchant != null">
        #{orderMerchant,jdbcType=VARCHAR},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=VARCHAR},
      </if>
      <if test="orderDiscount != null">
        #{orderDiscount,jdbcType=VARCHAR},
      </if>
      <if test="orderPostage != null">
        #{orderPostage,jdbcType=VARCHAR},
      </if>
      <if test="actualPayment != null">
        #{actualPayment,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="receiptInformation != null">
        #{receiptInformation,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.nsu.greywolf.pojo.OrdersExample" resultType="java.lang.Long">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="record.orderId != null">
        orderId = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.logisticsId != null">
        logisticsId = #{record.logisticsId,jdbcType=INTEGER},
      </if>
      <if test="record.volunteerId != null">
        volunteerId = #{record.volunteerId,jdbcType=INTEGER},
      </if>
      <if test="record.orderNumber != null">
        orderNumber = #{record.orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.orderTime != null">
        orderTime = #{record.orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderMerchant != null">
        orderMerchant = #{record.orderMerchant,jdbcType=VARCHAR},
      </if>
      <if test="record.totalPrice != null">
        totalPrice = #{record.totalPrice,jdbcType=VARCHAR},
      </if>
      <if test="record.orderDiscount != null">
        orderDiscount = #{record.orderDiscount,jdbcType=VARCHAR},
      </if>
      <if test="record.orderPostage != null">
        orderPostage = #{record.orderPostage,jdbcType=VARCHAR},
      </if>
      <if test="record.actualPayment != null">
        actualPayment = #{record.actualPayment,jdbcType=VARCHAR},
      </if>
      <if test="record.orderStatus != null">
        orderStatus = #{record.orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.receiptInformation != null">
        receiptInformation = #{record.receiptInformation,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set orderId = #{record.orderId,jdbcType=INTEGER},
      logisticsId = #{record.logisticsId,jdbcType=INTEGER},
      volunteerId = #{record.volunteerId,jdbcType=INTEGER},
      orderNumber = #{record.orderNumber,jdbcType=VARCHAR},
      orderTime = #{record.orderTime,jdbcType=TIMESTAMP},
      orderMerchant = #{record.orderMerchant,jdbcType=VARCHAR},
      totalPrice = #{record.totalPrice,jdbcType=VARCHAR},
      orderDiscount = #{record.orderDiscount,jdbcType=VARCHAR},
      orderPostage = #{record.orderPostage,jdbcType=VARCHAR},
      actualPayment = #{record.actualPayment,jdbcType=VARCHAR},
      orderStatus = #{record.orderStatus,jdbcType=VARCHAR},
      receiptInformation = #{record.receiptInformation,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nsu.greywolf.pojo.Orders">
    update orders
    <set>
      <if test="logisticsId != null">
        logisticsId = #{logisticsId,jdbcType=INTEGER},
      </if>
      <if test="volunteerId != null">
        volunteerId = #{volunteerId,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null">
        orderNumber = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        orderTime = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderMerchant != null">
        orderMerchant = #{orderMerchant,jdbcType=VARCHAR},
      </if>
      <if test="totalPrice != null">
        totalPrice = #{totalPrice,jdbcType=VARCHAR},
      </if>
      <if test="orderDiscount != null">
        orderDiscount = #{orderDiscount,jdbcType=VARCHAR},
      </if>
      <if test="orderPostage != null">
        orderPostage = #{orderPostage,jdbcType=VARCHAR},
      </if>
      <if test="actualPayment != null">
        actualPayment = #{actualPayment,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        orderStatus = #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="receiptInformation != null">
        receiptInformation = #{receiptInformation,jdbcType=VARCHAR},
      </if>
    </set>
    where orderId = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.nsu.greywolf.pojo.Orders">
    update orders
    set logisticsId = #{logisticsId,jdbcType=INTEGER},
      volunteerId = #{volunteerId,jdbcType=INTEGER},
      orderNumber = #{orderNumber,jdbcType=VARCHAR},
      orderTime = #{orderTime,jdbcType=TIMESTAMP},
      orderMerchant = #{orderMerchant,jdbcType=VARCHAR},
      totalPrice = #{totalPrice,jdbcType=VARCHAR},
      orderDiscount = #{orderDiscount,jdbcType=VARCHAR},
      orderPostage = #{orderPostage,jdbcType=VARCHAR},
      actualPayment = #{actualPayment,jdbcType=VARCHAR},
      orderStatus = #{orderStatus,jdbcType=VARCHAR},
      receiptInformation = #{receiptInformation,jdbcType=VARCHAR}
    where orderId = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>