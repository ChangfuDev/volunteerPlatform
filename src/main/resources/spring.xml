<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--spring配置文件 负责配置和业务逻辑相关的-->

    <context:component-scan base-package="cn.edu.nsu.greywolf">
        <context:include-filter type="annotation"
            expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--引入jdbc的配置项  -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--  数据源，事务管理等  -->
    <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbcUrl}"/>
        <property name="driverClass" value="${jdbcDriverClassName}"/>
        <property name="user" value="${jdbcUsername}"/>
        <property name="password" value="${jdbcPassword}"/>

        <property name="initialPoolSize" value="${jdbcInitialSize}"/>
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
        <property name="acquireIncrement" value="${jdbcAcquireIncrement}" />
        <property name="maxStatements" value="${jdbcMaxStatements}" />
        <!--连接池中保留的最小连接数。-->
        <property name="minPoolSize" value="${jdbcMinActive}" />
        <!--连接池中保留的最大连接数。Default: 15 -->
        <property name="maxPoolSize" value="${jdbcMaxActive}" />
        <!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime" value="${jdbcMaxWait}" />

    </bean>

    <!--===========================配置与mybatis整合==================-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--  指定mybatis全局配置文件路径  -->
        <property name="configLocation" value="classpath:spring-mybatis.xml"></property>
        <property name="dataSource" ref="pooledDataSource"></property>
        <property name="mapperLocations" value="classpath:mapping/*.xml"></property>
    </bean>

    <!--配置扫描器，将mybatis接口的实现加入到ioc容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--  扫描所有的mapper接口的实现，加入到ioc容器中  -->
        <property name="basePackage" value="cn.edu.nsu.greywolf.mapper"></property>
    </bean>

    <!--配置执行批量操作的sqlSession-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <!--批量操作类型-->
        <constructor-arg name="executorType" value="BATCH"/>
    </bean>
    <!--=============================mybatis整合结束====================-->

    <!--=====================事务控制的配置==============================-->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--  控制数据源  -->
        <property name="dataSource" ref="pooledDataSource"></property>
    </bean>
    <!--  开启基于注解的事务，使用xml配置形式的事务（主要是使用配置式）需要引入aop-->
    <aop:config>
        <!--切入点表达式-->
        <!--  cn.edu.nsu.greywolf.services..*(..)下的所有类与方法 (..)标识参数任意多 -->
        <aop:pointcut id="txPointcut"
            expression="execution(* cn.edu.nsu.greywolf.services..*(..))"></aop:pointcut>
        <!--  配置事务增强-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"></aop:advisor>
    </aop:config>
    <!--  配置事务增强，事务如何切入  -->
    <tx:advice id="txAdvice">
        <tx:attributes>
            <!--  所有方法都是事务方法  -->
            <tx:method name="*"/>
            <!--  以get开始的方法(查询方法) read-only="true" 可以优化 -->
            <tx:method name="get*" read-only="true"></tx:method>
        </tx:attributes>
    </tx:advice>

    <!--=====================事务控制的配置==============================-->
    <!--全局异常处理器-->
    <bean class="cn.edu.nsu.greywolf.exception.CustomExceptionResolver"/>

</beans>